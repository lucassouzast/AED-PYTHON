class TabelaHash:
    def __init__(self, tamanho):
        self.tamanho = tamanho
        self.qnt_elementos = 0
        self.tabela = []
        self.inicializar_tabela()


    class Elemento:
        def __init__(self, key, value):
            self.chave = key
            self.valor = value


    def keys(self):
        chaves = []
        for lista in self.tabela:
            for elemento in lista:
                chaves.append(elemento.chave)

        return chaves

    def values(self):
        valores = []
        for lista in self.tabela:
            for elemento in lista:
                valores.append(elemento.valor)

        return valores

    def items(self):
        itens = []
        for lista in self.tabela:
            for elemento in lista:
                tupla = elemento.chave, elemento.valor
                itens.append(tupla)

        return itens


    def __len__(self):
        return self.qnt_elementos


    def __iter__(self):
        return iter(self.tabela)

    def __contains__(self, key):
        indice = hash(key) % self.tamanho

        for elemento in self.tabela[indice]:
            if elemento.chave == key:
                return True
            else:
                return False


    def __getitem__(self, key):
        indice = hash(key) % self.tamanho

        for elemento in self.tabela[indice]:
            if elemento.chave == key:
                return elemento.valor

        raise KeyError(key)


    def __setitem__(self, key, value):
        indice = hash(key) % self.tamanho
        if key in self:
            for elemento in self.tabela[indice]:
                if elemento.chave == key:
                    elemento.valor = value
                    return
        else:
            novo_elemento = self.Elemento(key, value)
            self.tabela[indice].append(novo_elemento)
            self.qnt_elementos += 1


    def __delitem__(self, key):
        indice = hash(key) % self.tamanho

        for i, elemento in enumerate(self.tabela[indice]):
            if elemento.chave == key:
                del self.tabela[indice][i]
                self.qnt_elementos -= 1
                return

        raise KeyError(key)


    def __str__(self):
        retorno = '{'
        i = 0
        for chave, valor in self.items():
            retorno += chave.__repr__()
            retorno += ': '
            retorno += valor.__repr__()

            if i < len(self)-1:
                retorno += ', '

            i += 1

        retorno += '}'
        return retorno


    def __repr__(self):
        return self.__str__()


    def inicializar_tabela(self):
        for i in range(self.tamanho):
            self.tabela.append([])
